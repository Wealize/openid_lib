{"version":3,"file":"result.js","sourceRoot":"","sources":["../../../../src/common/classes/result.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,MAAM;IAEL;IACA;IAFZ,YACY,EAAiB,EACjB,KAAoB;QADpB,OAAE,GAAF,EAAE,CAAe;QACjB,UAAK,GAAL,KAAK,CAAe;IAC7B,CAAC;IAEJ,MAAM,CAAC,EAAE,CAAI,IAAO;QAClB,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,GAAG,CAAI,IAAO;QACnB,OAAO,IAAI,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC;IAClC,CAAC;IAED,IAAI;QACF,OAAO,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;YAChB,OAAO,IAAI,CAAC,EAAG,CAAC;QAClB,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;YACnB,OAAO,IAAI,CAAC,KAAM,CAAC;QACrB,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC/C,CAAC;IAED,GAAG,CAAI,OAA0B;QAC/B,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;YACnB,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAM,CAAC,CAAC;QACjC,CAAC;QACD,OAAO,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;YAChB,OAAO,IAAI,CAAC,EAAG,CAAC;QAClB,CAAC;QACD,MAAM,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACF","sourcesContent":["export class Result<S, E extends Error | unknown> {\n  protected constructor(\n    protected ok: S | undefined,\n    protected error: E | undefined,\n  ) {}\n\n  static Ok<S>(data: S): Result<S, any> {\n    return new Result(data, undefined);\n  }\n\n  static Err<E>(data: E): Result<any, E> {\n    return new Result(undefined, data);\n  }\n\n  isError() {\n    return this.error !== undefined;\n  }\n\n  isOk() {\n    return this.ok !== undefined;\n  }\n\n  unwrap(): S {\n    if (this.isOk()) {\n      return this.ok!;\n    }\n    throw new Error('Unwrap of error value');\n  }\n\n  unwrapError(): E {\n    if (this.isError()) {\n      return this.error!;\n    }\n    throw new Error('Unwrap of non error value');\n  }\n\n  map<N>(handler: (content: S) => N): Result<N, E> {\n    if (this.isError()) {\n      return Result.Err(this.error!);\n    }\n    return Result.Ok(handler(this.ok!));\n  }\n\n  consume(): S {\n    if (this.isOk()) {\n      return this.ok!;\n    }\n    throw this.error;\n  }\n}\n"]}