{"version":3,"file":"vp_token_request.js","sourceRoot":"","sources":["../../../../src/common/classes/vp_token_request.ts"],"names":[],"mappings":"AAKA;;GAEG;AACH,MAAM,OAAO,cAAc;IACzB;;;;;OAKG;IACH,YACS,aAAmC,EACnC,OAAe,EACd,2BAAmC;QAFpC,kBAAa,GAAb,aAAa,CAAsB;QACnC,YAAO,GAAP,OAAO,CAAQ;QACd,gCAA2B,GAA3B,2BAA2B,CAAQ;IACzC,CAAC;IAEL;;;OAGG;IACH,KAAK;QACH,MAAM,IAAI,qBAAQ,IAAI,CAAC,aAAa,CAAE,CAAC;QACvC,OAAO,IAAI,CAAC,uBAAuB,CAAC;QACpC,OAAO,IAAI,CAAC,2BAA2B,CAAC;QACxC,OAAO,GAAG,IAAI,CAAC,2BAA2B,IAAI,IAAI,eAAe,CAC/D,MAAM,CAAC,OAAO,iCACT,IAEF,KACD,OAAO,EAAE,IAAI,CAAC,OAAO,IACrB,CACH,CAAC,QAAQ,EAAE,EAAE,CAAC;IACjB,CAAC;CACF","sourcesContent":["import { AuthzResponseMode } from \"../formats/index.js\";\nimport {\n  DIFPresentationDefinition\n} from \"../interfaces/presentation_definition.interface.js\";\n\n/**\n * Define an authorisation request that expects an VP token as \"response_type\"\n */\nexport class VpTokenRequest {\n  /**\n   * Constructor of the class\n   * @param requestParams VP Token request parameters\n   * @param request The request as a JWT\n   * @param clientAuthorizationEndpoint \n   */\n  constructor(\n    public requestParams: VpTokenRequestParams,\n    public request: string,\n    private clientAuthorizationEndpoint: string\n  ) { }\n\n  /**\n   * Encode the request in URL format\n   * @returns The request in URL format\n   */\n  toUri(): string {\n    const data = { ...this.requestParams };\n    delete data.presentation_definition;\n    delete data.presentation_definition_uri;\n    return `${this.clientAuthorizationEndpoint}?${new URLSearchParams(\n      Object.entries({\n        ...data as Omit<\n          VpTokenRequestParams, \"presentation_definition\" | \"presentation_definition_uri\"\n        >,\n        request: this.request,\n      })\n    ).toString()}`;\n  }\n}\n\n/**\n * Parameters of a VP Token Request\n */\nexport interface VpTokenRequestParams {\n  response_type: \"vp_token\";\n  presentation_definition?: DIFPresentationDefinition;\n  presentation_definition_uri?: string;\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  response_mode?: AuthzResponseMode;\n  state?: string;\n  nonce?: string;\n}\n"]}