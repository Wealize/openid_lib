{"version":3,"file":"openid.error.js","sourceRoot":"","sources":["../../../../../src/common/classes/error/openid.error.ts"],"names":[],"mappings":"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","sourcesContent":["export class OpenIdError extends Error {\n  constructor(\n    public code: string,\n    public message: string,\n    public recommendedHttpStatus?: number,\n    public redirectUri?: string,\n    public holderState?: string,\n  ) {\n    super();\n  }\n\n  toRfcSpecification() {\n    return {\n      status: this.recommendedHttpStatus,\n      error: {\n        code: this.code,\n        erro_description: this.message,\n      },\n    };\n  }\n}\n\nexport class InvalidRequest extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('invalid_request', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class AccessDenied extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('access_denied', message, 403, redirectUri, holderState);\n  }\n}\n\nexport class InvalidClient extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('invalid_client', message, 401, redirectUri, holderState);\n  }\n}\n\nexport class InvalidGrant extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('invalid_grant', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class UnauthorizedClient extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('unauthorized_client', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class UnsupportedGrantType extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('unsupported_grant_type', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class InvalidScope extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('invalid_scope', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class InvalidToken extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('invalid_token', message, 401, redirectUri, holderState);\n  }\n}\n\nexport class InsufficientScope extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('insufficient_scope', message, 403, redirectUri, holderState);\n  }\n}\n\nexport class InvalidCredentialRequest extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('invalid_credential_request', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class UnsupportedCredentialType extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super(\n      'unsupported_credential_type',\n      message,\n      400,\n      redirectUri,\n      holderState,\n    );\n  }\n}\n\nexport class UnsupportedCredentialFormat extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super(\n      'unsupported_credential_format',\n      message,\n      400,\n      redirectUri,\n      holderState,\n    );\n  }\n}\n\nexport class InvalidProof extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('invalid_proof', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class UnsupportedResponseType extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('unsupported_response_type', message, 400, redirectUri, holderState);\n  }\n}\n\nexport class VpFormatsNotSupported extends OpenIdError {\n  constructor(message: string, redirectUri?: string, holderState?: string) {\n    super('vp_formats_not_supported', message, 400, redirectUri, holderState);\n  }\n}\n"]}