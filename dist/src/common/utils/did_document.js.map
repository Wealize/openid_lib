{"version":3,"file":"did_document.js","sourceRoot":"","sources":["../../../../src/common/utils/did_document.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAIvD,mEAAmE;AACnE,wCAAwC;AACxC,wDAAwD;AAExD;;;;;;;;GAQG;AACH,MAAM,UAAU,0BAA0B,CACxC,WAAwB,EACxB,gBAAwB;;IAExB,IAAI,CAAC,CAAA,MAAA,WAAW,CAAC,cAAc,0CAAE,QAAQ,CAAC,gBAAgB,CAAC,CAAA,EAAE,CAAC;QAC5D,MAAM,IAAI,gBAAgB,CAAC,6EAA6E,CAAC,CAAC;IAC5G,CAAC;IACD,OAAO,kBAAkB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC3D,CAAC;AAED;;;;;;;;GAQG;AACH,MAAM,UAAU,yBAAyB,CACvC,WAAwB,EACxB,gBAAwB;;IAExB,IAAI,CAAC,CAAA,MAAA,WAAW,CAAC,eAAe,0CAAE,QAAQ,CAAC,gBAAgB,CAAC,CAAA,EAAE,CAAC;QAC7D,MAAM,IAAI,gBAAgB,CACxB,4EAA4E,CAC7E,CAAC;IACJ,CAAC;IACD,OAAO,kBAAkB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC3D,CAAC;AAED,SAAS,kBAAkB,CACzB,WAAwB,EACxB,gBAAwB;IAExB,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;QACpC,MAAM,IAAI,gBAAgB,CACxB,yDAAyD,WAAW,CAAC,EAAE,EAAE,CAC1E,CAAC;IACJ,CAAC;IACD,MAAM,kBAAkB,GAAG,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAC5D,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,gBAAgB,CAC3C,CAAC;IACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACxB,MAAM,IAAI,gBAAgB,CACxB,2CAA2C,gBAAgB,EAAE,CAC9D,CAAC;IACJ,CAAC;IACD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACrC,MAAM,IAAI,gBAAgB,CACxB,gEAAgE,CACjE,CAAC;IACJ,CAAC;IACD,OAAO,kBAAkB,CAAC,YAAY,CAAC;AACzC,CAAC","sourcesContent":["import { DidDocumentError } from \"../classes/index.js\";\nimport { DIDDocument } from \"did-resolver\";\nimport { JWK } from \"jose\";\n\n// TODO: In a DID Document the VerificationMethod can be expressed \n// in differents formats other than JWK.\n// https://www.w3.org/TR/did-core/#verification-material\n\n/**\n * Obtains the Authentification JWK from a DID Document\n * @param didDocument The DID document from which to extract the key\n * @param methodIdentifier The verification method to search in the DID document\n * @returns The publick key associated in JWK format\n * @throws If the method identifier provided is not specified in a \n * authentification relationship or if there is not verification method \n * with that ID. It can also throws if the method does not provide any JWK\n */\nexport function getAuthentificationJWKKeys(\n  didDocument: DIDDocument,\n  methodIdentifier: string,\n): JWK {\n  if (!didDocument.authentication?.includes(methodIdentifier)) {\n    throw new DidDocumentError(\"The kid specified is not the identifier of an authentification relationship\");\n  }\n  return getJwkFromDocument(didDocument, methodIdentifier);\n}\n\n/**\n * Obtains the Assertion JWK from a DID Document\n * @param didDocument The DID document from which to extract the key\n * @param methodIdentifier The verification method to search in the DID document\n * @returns The publick key associated in JWK format\n * @throws If the method identifier provided is not specified in a \n * authentification relationship or if there is not verification method \n * with that ID. It can also throws if the method does not provide any JWK\n */\nexport function getAssertionMethodJWKKeys(\n  didDocument: DIDDocument,\n  methodIdentifier: string,\n): JWK {\n  if (!didDocument.assertionMethod?.includes(methodIdentifier)) {\n    throw new DidDocumentError(\n      \"The kid specified is not the identifier of an assertionMethod relationship\"\n    );\n  }\n  return getJwkFromDocument(didDocument, methodIdentifier);\n}\n\nfunction getJwkFromDocument(\n  didDocument: DIDDocument,\n  methodIdentifier: string,\n): JWK {\n  if (!didDocument.verificationMethod) {\n    throw new DidDocumentError(\n      `No verification methods defined in DidDocumet for did ${didDocument.id}`\n    );\n  }\n  const verificationMethod = didDocument.verificationMethod.find(\n    (method) => method.id === methodIdentifier\n  );\n  if (!verificationMethod) {\n    throw new DidDocumentError(\n      `There is no verification method with id ${methodIdentifier}`\n    );\n  }\n  if (!verificationMethod.publicKeyJwk) {\n    throw new DidDocumentError(\n      \"The verificationMethod must contain public key with JWK format\"\n    );\n  }\n  return verificationMethod.publicKeyJwk;\n}\n"]}