{"version":3,"file":"pkce.utils.js","sourceRoot":"","sources":["../../../../src/common/utils/pkce.utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,iBAAiB,IAAI,YAAY,EAAC,MAAM,gBAAgB,CAAC;AACjE,OAAO,EAAC,oBAAoB,EAAC,MAAM,mBAAmB,CAAC;AACvD,OAAO,EAAC,mBAAmB,EAAC,MAAM,uBAAuB,CAAC;AAE1D;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,aAAsB;IAC5D,IAAI,CAAC,aAAa,EAAE,CAAC;QACnB,aAAa,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IACD,OAAO,MAAM,YAAY,CAAC,aAAa,CAAC,CAAC;AAC3C,CAAC","sourcesContent":["import {generateChallenge as pkceGenerate} from 'pkce-challenge';\nimport {generateRandomString} from './string.utils.js';\nimport {DEFAULT_PKCE_LENGTH} from '../constants/index.js';\n\n/***\n * Generate a pkce challenge that resolve with the code_verifier provided\n * @param code_verifier The code verifier that will resolve the challenge. If not\n * provided, code_verifier will be a random generated string of seven characters\n */\nexport async function generateChallenge(code_verifier?: string) {\n  if (!code_verifier) {\n    code_verifier = generateRandomString(DEFAULT_PKCE_LENGTH);\n  }\n  return await pkceGenerate(code_verifier);\n}\n"]}