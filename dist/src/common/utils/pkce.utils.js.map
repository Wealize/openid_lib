{"version":3,"file":"pkce.utils.js","sourceRoot":"","sources":["../../../../src/common/utils/pkce.utils.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,IAAI,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAClE,OAAO,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAA;AACxD,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAA;AAE3D;;;;GAIG;AACH,MAAM,UAAgB,iBAAiB,CAAC,aAAsB;;QAC5D,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,aAAa,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,CAAA;QAC3D,CAAC;QACD,OAAO,MAAM,YAAY,CAAC,aAAa,CAAC,CAAA;IAC1C,CAAC;CAAA","sourcesContent":["import { generateChallenge as pkceGenerate } from \"pkce-challenge\"\nimport { generateRandomString } from \"./string.utils.js\"\nimport { DEFAULT_PKCE_LENGTH } from \"../constants/index.js\"\n\n/***\n * Generate a pkce challenge that resolve with the code_verifier provided\n * @param code_verifier The code verifier that will resolve the challenge. If not\n * provided, code_verifier will be a random generated string of seven characters\n */\nexport async function generateChallenge(code_verifier?: string) {\n  if (!code_verifier) {\n    code_verifier = generateRandomString(DEFAULT_PKCE_LENGTH)\n  }\n  return await pkceGenerate(code_verifier)\n}\n"]}