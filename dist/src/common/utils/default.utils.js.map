{"version":3,"file":"default.utils.js","sourceRoot":"","sources":["../../../../src/common/utils/default.utils.ts"],"names":[],"mappings":"AAEA;;;;GAIG;AACH,MAAM,UAAU,0CAA0C,CACxD,MAAc;IAEd,OAAO;QACL,MAAM,EAAE,MAAM;QACd,sBAAsB,EAAE,GAAG,MAAM,YAAY;QAC7C,cAAc,EAAE,GAAG,MAAM,QAAQ;QACjC,QAAQ,EAAE,GAAG,MAAM,OAAO;QAC1B,gBAAgB,EAAE,CAAC,QAAQ,CAAC;QAC5B,wBAAwB,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;QAClD,wBAAwB,EAAE,CAAC,OAAO,CAAC;QACnC,qBAAqB,EAAE,CAAC,oBAAoB,CAAC;QAC7C,uBAAuB,EAAE,CAAC,QAAQ,CAAC;QACnC,qCAAqC,EAAE,CAAC,OAAO,CAAC;QAChD,2CAA2C,EAAE,CAAC,OAAO,CAAC;QACtD,2BAA2B,EAAE,IAAI;QACjC,+BAA+B,EAAE,IAAI;QACrC,qCAAqC,EAAE,CAAC,iBAAiB,CAAC;QAC1D,oBAAoB,EAAE;YACpB,MAAM,EAAE;gBACN,oBAAoB,EAAE,CAAC,OAAO,CAAC;aAChC;YACD,MAAM,EAAE;gBACN,oBAAoB,EAAE,CAAC,OAAO,CAAC;aAChC;SACF;QACD,8BAA8B,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;QACvD,kCAAkC,EAAE,CAAC,MAAM,CAAC;QAC5C,wBAAwB,EAAE;YACxB,yBAAyB;YACzB,0BAA0B;SAC3B;KACF,CAAC;AACJ,CAAC","sourcesContent":["import {AuthServerMetadata} from '../interfaces/auth_server_metadata.interface.js';\n\n/**\n * Generate a default metadata configuration for a Issuer according to EBSI\n * @param issuer The issuer identifier. It should be an URI\n * @returns Authorisation server metadata\n */\nexport function generateDefaultAuthorisationServerMetadata(\n  issuer: string,\n): AuthServerMetadata {\n  return {\n    issuer: issuer,\n    authorization_endpoint: `${issuer}/authorize`,\n    token_endpoint: `${issuer}/token`,\n    jwks_uri: `${issuer}/jwks`,\n    scopes_supported: ['openid'],\n    response_types_supported: ['vp_token', 'id_token'],\n    response_modes_supported: ['query'],\n    grant_types_supported: ['authorization_code'],\n    subject_types_supported: ['public'],\n    id_token_signing_alg_values_supported: ['ES256'],\n    request_object_signing_alg_values_supported: ['ES256'],\n    request_parameter_supported: true,\n    request_uri_parameter_supported: true,\n    token_endpoint_auth_methods_supported: ['private_key_jwt'],\n    vp_formats_supported: {\n      jwt_vp: {\n        alg_values_supported: ['ES256'],\n      },\n      jwt_vc: {\n        alg_values_supported: ['ES256'],\n      },\n    },\n    subject_syntax_types_supported: ['did:key', 'did:ebsi'],\n    subject_trust_frameworks_supported: ['ebsi'],\n    id_token_types_supported: [\n      'subject_signed_id_token',\n      'attester_signed_id_token',\n    ],\n  };\n}\n"]}