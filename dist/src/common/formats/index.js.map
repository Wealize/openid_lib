{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/common/formats/index.ts"],"names":[],"mappings":"AAuBA;;GAEG;AACH,MAAM,CAAN,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,2CAAE,CAAA;IACF,2CAAE,CAAA;AACJ,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB","sourcesContent":["// TODO: \"JWT_VC is a old identifier. It's there for compatibility\"\n// https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#format-profiles\n/**\n * THe valid formats for a W3C VC\n */\nexport type W3CVerifiableCredentialFormats =\n  | 'jwt_vc_json'\n  | 'jwt_vc_json-ld'\n  | 'ldp_vc'\n  | 'jwt_vc';\n// TODO: \"JWT_VP is a old identifier. It's there for compatibility\"\n/**\n * The valid formats for a W3C VP\n */\nexport type W3CVerifiablePresentationFormats =\n  | 'jwt_vp_json'\n  | 'ldp_vp'\n  | 'jwt_vp';\n// OAuth 2.0 Multiple Response Type Encoding Practices\n/**\n * Valid response_modes for a authorisation response\n */\nexport type AuthzResponseMode = 'direct_post' | 'post' | 'query' | 'fragment';\n/**\n * W3C VC Data models version number\n */\nexport enum W3CDataModel {\n  V1,\n  V2,\n}\n\nexport type ClientAssertionTypes =\n  'urn:ietf:params:oauth:client-assertion-type:jwt-bearer';\n"]}