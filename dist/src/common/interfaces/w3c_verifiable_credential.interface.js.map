{"version":3,"file":"w3c_verifiable_credential.interface.js","sourceRoot":"","sources":["../../../../src/common/interfaces/w3c_verifiable_credential.interface.ts"],"names":[],"mappings":"","sourcesContent":["import {JwtPayload} from 'jsonwebtoken';\n\n/**\n * Type definition that defines the possible models for a W3C VC\n */\nexport type W3CVerifiableCredential =\n  | W3CVerifiableCredentialV1\n  | W3CVerifiableCredentialV2;\n\n/**\n * Defines a Verifiable Credential in accordance to W3C VC Data Model 1.0\n */\nexport interface W3CVerifiableCredentialV1 {\n  '@context': string[];\n  type: string[];\n  credentialSchema?: W3CVcSchemaDefinition | W3CVcSchemaDefinition[];\n  issuer: string;\n  issued?: string;\n  issuanceDate: string; // Date timestamp. Example: \"2010-01-01T19:23:24Z\",\n  validFrom?: string; // Date timestamp. Example: \"2010-01-01T19:23:24Z\",\n  expirationDate?: string; // Date timestamp. Example: \"2010-01-01T19:23:24Z\",\n  id?: string;\n  credentialStatus?: W3CCredentialStatus | W3CCredentialStatus[];\n  termsOfUse?: W3CTermsOfUse | W3CTermsOfUse[];\n  description?: string;\n  credentialSubject: W3CSingleCredentialSubject;\n  proof?: EmbeddedProof;\n  [x: string]: any;\n}\n\n/**\n * Defines a Verifiable Credential in accordance to W3C VC Data Model 2.0\n */\nexport interface W3CVerifiableCredentialV2 {\n  '@context': string[];\n  type: string[];\n  credentialSchema?: W3CVcSchemaDefinition | W3CVcSchemaDefinition[];\n  issuer: string;\n  validFrom?: string; // Date timestamp. Example: \"2010-01-01T19:23:24Z\",\n  validUntil?: string; // Date timestamp. Example: \"2010-01-01T19:23:24Z\",\n  id?: string;\n  credentialStatus?: W3CCredentialStatus | W3CCredentialStatus[];\n  termsOfUse?: W3CTermsOfUse | W3CTermsOfUse[];\n  description?: string;\n  credentialSubject: W3CSingleCredentialSubject;\n  proof?: EmbeddedProof;\n  [x: string]: any;\n}\n\n/**\n * Defines the schema definition of a credential in\n * accordance to W3C VC\n */\nexport interface W3CVcSchemaDefinition {\n  id: string;\n  type: string;\n}\n\n/**\n * Defines the status information of a credential in\n * accordance to W3C VC\n */\nexport interface W3CCredentialStatus {\n  id?: string;\n  type: string;\n  [key: string]: any;\n}\n\n/**\n * Defines the terms of use information in accordance to W3C VC\n */\nexport interface W3CTermsOfUse {\n  type: string;\n  id?: string;\n  [key: string]: any;\n}\n\n/**\n * Defines subject data of a credential in accordance to W3C VC\n */\nexport interface W3CSingleCredentialSubject {\n  id?: string;\n  [key: string]: any;\n}\n\n/**\n * Defines an embedded proof for a VC in accordance to W3C VC\n * @see https://www.w3.org/TR/vc-data-integrity/#proofs\n */\nexport interface EmbeddedProof {\n  id?: string;\n  type: string;\n  proofPurpose: string;\n  verificationMethod: string;\n  created?: string; // Date timestamp. Example: \"2010-01-01T19:23:24Z\",\n  expires?: string; // Date timestamp. Example: \"2010-01-01T19:23:24Z\",\n  domain?: string;\n  challenge?: string;\n  proofValue: string;\n  previousProof?: string | string[];\n  nonce?: string;\n}\n\n/**\n * Defines the payload of a JWT_VC\n */\nexport interface JwtVcPayload extends JwtPayload {\n  vc: W3CVerifiableCredential;\n}\n"]}