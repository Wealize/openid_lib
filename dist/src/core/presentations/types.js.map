{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/core/presentations/types.ts"],"names":[],"mappings":"","sourcesContent":["import { KeyLike } from \"jose\";\nimport { W3CDataModel } from \"../../common/formats/index.js\";\nimport { W3CVerifiableCredential } from \"../../common/interfaces/index.js\";\nimport { Result } from \"../../common/classes/result.js\";\n\n/**\n * Callback type that is used to perfom additional verifications of a VC.\n * It can be used to check the credentialStatus parameter and the terms of use.\n * @param vc The VC that has to be verified\n * @param dmVersion The data model version in accordance to W3C VC\n * @param issuerPublickKey The publickKey of the issuer that issued the VC. \n * It will be undefined only if VC Signature verification is dissabled.\n * @returns Indication of whether the verification was successful \n * accompanied by an optional error message\n */\nexport type CredentialAdditionalVerification = (\n  vc: W3CVerifiableCredential,\n  dmVersion: W3CDataModel,\n  issuerPublickKey?: KeyLike | Uint8Array\n) => Promise<Result<null, Error>>;\n\n/**\n * Callback type that is used to verify the nonce value of a VP Token\n * @param subject The holder of the VP Token\n * @param nonce The nonce specified in the VP Token\n * @returns Indication of whether the verification was successful \n * accompanied by an optional error message\n */\nexport type NonceAndStateVerification = (\n  subject: string,\n  nonce: string,\n  state?: string\n) => Promise<Result<null, Error>>;\n\n/**\n * Data extracted from verifiable credentials contained in a VP as \n * indicated in a submission definition. For each dataset, the key\n *  corresponds to the provided identifier or, if this has not been\n *  provided, by the JSON PATH used to obtain the credential data.\n */\nexport type VpExtractedData = {\n  /**\n   * The data extracted from the VCs in the VP\n   */\n  claimsData: Record<string, any>;\n  /**\n   * The DID of the holder of the VP\n   */\n  holderDid: string;\n}\n"]}