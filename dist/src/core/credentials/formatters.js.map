{"version":3,"file":"formatters.js","sourceRoot":"","sources":["../../../../src/core/credentials/formatters.ts"],"names":[],"mappings":"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","sourcesContent":["import {InternalNonceError} from '../../common/classes/index.js';\nimport {\n  W3CDataModel,\n  W3CVerifiableCredentialFormats,\n} from '../../common/formats/index.js';\nimport {W3CVerifiableCredential} from '../../common/interfaces/w3c_verifiable_credential.interface.js';\nimport {JwtPayload} from 'jsonwebtoken';\nimport {expressDateInSeconds} from '../../common/utils/time.js';\n\n/**\n * Abstract class allowing to express unsigned W3C credentials in different formats.\n */\nexport abstract class VcFormatter {\n  constructor(protected dataModel: W3CDataModel) {}\n  /**\n   * Express the specified VC in the format associated with the object\n   * @param vc The VC to format.\n   * @returns THe VC formated in W3C format or as a JWT payload\n   */\n  abstract formatVc(\n    vc: W3CVerifiableCredential,\n  ): W3CVerifiableCredential | JwtPayload;\n\n  /**\n   * Generates a formatter instance based on the specified format\n   * @param format The format to consider\n   * @param dataModel The W3C data model version\n   * @returns A VcFormatter that allow to express unsigned VC in the specified format\n   */\n  static fromVcFormat(\n    format: W3CVerifiableCredentialFormats,\n    dataModel: W3CDataModel,\n  ): VcFormatter {\n    if (format === 'jwt_vc' || format === 'jwt_vc_json') {\n      return new JwtVcFormatter(dataModel);\n    } else if (format === 'jwt_vc_json-ld' || format === 'ldp_vc') {\n      // TODO:\n      throw new InternalNonceError('Unimplemented');\n    } else {\n      throw new InternalNonceError('Unsupported format');\n    }\n  }\n\n  /**\n   * Generates a format that allow to express VC in JWT format\n   * @returns A VcFormatter\n   */\n  static jwtFormatter(dataModel: W3CDataModel): JwtVcFormatter {\n    return new JwtVcFormatter(dataModel);\n  }\n}\n\nclass JwtVcFormatter extends VcFormatter {\n  formatVc(vc: W3CVerifiableCredential): W3CVerifiableCredential | JwtPayload {\n    const token: JwtPayload = {\n      sub: vc.credentialSubject.id,\n      iss: vc.issuer,\n      vc,\n    };\n    if (vc.id) {\n      token.jti = vc.id;\n    }\n    if (this.dataModel === W3CDataModel.V1) {\n      return this.formatDataModel1(token, vc);\n    } else {\n      return this.formatDataModel2(token, vc);\n    }\n  }\n\n  private formatDataModel1(\n    token: JwtPayload,\n    vc: W3CVerifiableCredential,\n  ): W3CVerifiableCredential | JwtPayload {\n    const nbf = vc.validFrom ?? vc.issuanceDate ?? vc.issued;\n    const iat = vc.issuanceDate ?? vc.issued ?? vc.validFrom;\n    if (nbf) {\n      token.nbf = expressDateInSeconds(nbf);\n    }\n    if (iat) {\n      token.iat = expressDateInSeconds(iat);\n    }\n    if (vc.expirationDate) {\n      token.exp = expressDateInSeconds(vc.expirationDate);\n    }\n    return token;\n  }\n\n  private formatDataModel2(\n    token: JwtPayload,\n    vc: W3CVerifiableCredential,\n  ): W3CVerifiableCredential | JwtPayload {\n    if (vc.validFrom) {\n      token.iat = expressDateInSeconds(vc.validFrom);\n      token.nbf = expressDateInSeconds(vc.validFrom);\n    }\n    if (vc.validUntil) {\n      token.exp = expressDateInSeconds(vc.validUntil);\n    }\n    return token;\n  }\n}\n"]}